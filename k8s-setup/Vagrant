Vagrant.configure("2") do |config|
  config.vm.box = "DGP/Ubuntu-24"  # Replace with the desired Ubuntu 24.04 box once available

  # Common VM settings for all nodes
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"   # Default memory, will be overridden for each node
    vb.cpus = 2          # Default CPUs, will be overridden for each node
  end

  # Node 1 - Master Node
  config.vm.define "k8s-master1" do |node1|
    node1.vm.hostname = "k8s-master1"
    node1.vm.network "private_network", type: "static", ip: "192.168.50.4"
    node1.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-master1"  # Unique name for this VM
      vb.memory = "2048"        # 2 GB RAM for the master node
      vb.cpus = 2               # 2 CPUs for the master node
    end

    node1.vm.provision "shell", inline: <<-SHELL
      sudo swapoff -a
      sudo sed -i '/swap/d' /etc/fstab
      sudo apt-get update
      sudo apt-get install -y containerd
      sudo mkdir -p /etc/systemd/system/containerd.service.d
      echo -e "[Service]\nExecStartPre=/sbin/modprobe br_netfilter\nExecStartPre=/sbin/modprobe overlay" | sudo tee /etc/systemd/system/containerd.service.d/10-k8s.conf
      sudo systemctl restart containerd
      sudo systemctl enable containerd
    SHELL
  end

  # Node 2 - Master Node
  config.vm.define "k8s-master2" do |node2|
    node2.vm.hostname = "k8s-master2"
    node2.vm.network "private_network", type: "static", ip: "192.168.50.5"
    node2.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-master2"  # Unique name for this VM
      vb.memory = "2048"        # 2 GB RAM for the master node
      vb.cpus = 2               # 2 CPUs for the master node
    end

    node2.vm.provision "shell", inline: <<-SHELL
      sudo swapoff -a
      sudo sed -i '/swap/d' /etc/fstab
      sudo apt-get update
      sudo apt-get install -y containerd
      sudo mkdir -p /etc/systemd/system/containerd.service.d
      echo -e "[Service]\nExecStartPre=/sbin/modprobe br_netfilter\nExecStartPre=/sbin/modprobe overlay" | sudo tee /etc/systemd/system/containerd.service.d/10-k8s.conf
      sudo systemctl restart containerd
      sudo systemctl enable containerd
    SHELL
  end

  # Node 3 - Master Node
  config.vm.define "k8s-master3" do |node3|
    node3.vm.hostname = "k8s-master3"
    node3.vm.network "private_network", type: "static", ip: "192.168.50.6"
    node3.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-master3"  # Unique name for this VM
      vb.memory = "2048"        # 2 GB RAM for the master node
      vb.cpus = 2               # 2 CPUs for the master node
    end

    node3.vm.provision "shell", inline: <<-SHELL
      sudo swapoff -a
      sudo sed -i '/swap/d' /etc/fstab
      sudo apt-get update
      sudo apt-get install -y containerd
      sudo mkdir -p /etc/systemd/system/containerd.service.d
      echo -e "[Service]\nExecStartPre=/sbin/modprobe br_netfilter\nExecStartPre=/sbin/modprobe overlay" | sudo tee /etc/systemd/system/containerd.service.d/10-k8s.conf
      sudo systemctl restart containerd
      sudo systemctl enable containerd
    SHELL
  end

  # Node 4 - Worker Node
  config.vm.define "k8s-worker1" do |node4|
    node4.vm.hostname = "k8s-worker1"
    node4.vm.network "private_network", type: "static", ip: "192.168.50.7"
    node4.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-worker1"  # Unique name for this VM
      vb.memory = "4096"        # 4 GB RAM for the worker node
      vb.cpus = 2               # 2 CPUs for the worker node
    end

    node4.vm.provision "shell", inline: <<-SHELL
      sudo swapoff -a
      sudo sed -i '/swap/d' /etc/fstab
      sudo apt-get update
      sudo apt-get install -y containerd
      sudo mkdir -p /etc/systemd/system/containerd.service.d
      echo -e "[Service]\nExecStartPre=/sbin/modprobe br_netfilter\nExecStartPre=/sbin/modprobe overlay" | sudo tee /etc/systemd/system/containerd.service.d/10-k8s.conf
      sudo systemctl restart containerd
      sudo systemctl enable containerd
    SHELL
  end

  # Node 5 - Worker Node
  config.vm.define "k8s-worker2" do |node5|
    node5.vm.hostname = "k8s-worker2"
    node5.vm.network "private_network", type: "static", ip: "192.168.50.8"
    node5.vm.provider "virtualbox" do |vb|
      vb.name = "k8s-worker2"  # Unique name for this VM
      vb.memory = "4096"        # 4 GB RAM for the worker node
      vb.cpus = 2               # 2 CPUs for the worker node
    end

    node5.vm.provision "shell", inline: <<-SHELL
      sudo swapoff -a
      sudo sed -i '/swap/d' /etc/fstab
      sudo apt-get update
      sudo apt-get install -y containerd
      sudo mkdir -p /etc/systemd/system/containerd.service.d
      echo -e "[Service]\nExecStartPre=/sbin/modprobe br_netfilter\nExecStartPre=/sbin/modprobe overlay" | sudo tee /etc/systemd/system/containerd.service.d/10-k8s.conf
      sudo systemctl restart containerd
      sudo systemctl enable containerd
    SHELL
  end
end

